version: 2.1

parameters:
  skip_md_files:
    type: boolean
    default: false
  remote_docker_version:
    type: string
    description: remote docker version
    default: "20.10.18"
  orb_version:
    type: string
    description: Deci ai ORB version https://circleci.com/developer/orbs/orb/deci-ai/circleci-common-orb
    default: "11.0.0"
#    default: "dev:alpha"
  ad_hoc_container_build:
    type: boolean
    default: false
  ad_hoc_container_build_code_only:
    type: boolean
    default: false

orbs:
  deci-common: deci-ai/circleci-common-orb@<< pipeline.parameters.orb_version >>

# This filter operates on SemVer2 tags only
release_tag_filter: &release_tag_filter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^\d+\.\d+\.\d+$/

release_candidate_filter: &release_candidate_filter
  filters:
    branches:
      only: master

release_candidate_tag_filter: &release_candidate_tag_filter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^\d+\.\d+\.\d+rc\d+/


commands:

  verify_that_package_version_is_aligned_with_code:
    parameters:
      version:
        type: string
      venv_name:
        type: string
    steps:
      - run:
          name: verify that the output of __version__ is what we expect
          command: |
            . << parameters.venv_name >>/bin/activate
            python3 tests/verify_version.py << parameters.version >>

  handle_version_files:
    parameters:
      version:
        type: string
    steps:
      - deci-common/git_config_automation_user
      - run:
          name: edit package version assisting files
          command: |
            echo << parameters.version >> > version.txt
            sed -i "s/^__version__.*/__version__ = \"<< parameters.version >>\"/g" src/data_gradients/__init__.py
      - run:
          name: commit package version assisting files
          command: |
            git commit -m "Deci Services - Changed version to << parameters.version >>" version.txt src/data_gradients/__init__.py

jobs:
  build:
    environment:
      CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>
    parameters:
      py_version:
        type: string
        default: latest
      package_name:
        type: string
    docker:
      - image: cimg/python:<< parameters.py_version >>
    resource_class: large
    steps:
      - deci-common/checkout_and_skip_build:
          check_version_file: true
          skip_md_files: << pipeline.parameters.skip_md_files >>
      - deci-common/get_persisted_version_info
      - unless:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                name: install Black Flake8 python linter
                command: |
                  pip install --user -r requirements.txt
      - run:
          name: add requirements.txt
          command: |
            cp requirements.txt src/data_gradients/requirements.txt
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python3 -m pip install pip --upgrade
            cat requirements.txt | cut -f1 -d"#" | xargs -n 1 -L 1 pip install --progress-bar off
      - run:
          name: edit package version
          command: |
            echo "${NEW_VERSION}" > version.txt
            cat version.txt
      - run:
          name: setup custom environment variables
          command: |
            echo 'export PYTHONPATH=/home/circleci/data_gradients' >> $BASH_ENV
            echo 'export UPLOAD_LOGS=FALSE' >> $BASH_ENV
      - run:
          name: install package
          no_output_timeout: 30m
          command: |
            . venv/bin/activate
            python3 -m pip install --extra-index-url https://pypi.ngc.nvidia.com .
      - run:
          name: run tests with coverage
          no_output_timeout: 30m
          command: |
            . venv/bin/activate
            coverage run --source=data_gradients -m unittest tests/deci_core_unit_test_suite_runner.py
            coverage report
            coverage html  # open htmlcov/index.html in a browser
      - store_artifacts:
          path: htmlcov

      - store_artifacts:
          path: ~/data_gradients_logs


  release_candidate:
    environment:
      CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>
    parameters:
      py_version:
        type: string
      dev_venv_name:
        type: string
        default: "dev-data_gradients-${CIRCLE_BUILD_NUM}"
    docker:
      - image: cimg/python:<< parameters.py_version >>
    steps:
      - deci-common/checkout_and_skip_build:
          check_version_file: true
          skip_md_files: << pipeline.parameters.skip_md_files >>

      - deci-common/get_persisted_version_info

      - handle_version_files:
          version: $NEW_VERSION

      - deci-common/pip_upload_package_codeartifact_dev:
          codeartifact_repository: "deci-packages"

      - deci-common/pip_test_package_installation_codeartifact_dev:
          package_name: "data-gradients"
          version: $NEW_VERSION
          venv_name: << parameters.dev_venv_name >>

      - verify_that_package_version_is_aligned_with_code:
          version: $NEW_VERSION
          venv_name: << parameters.dev_venv_name >>

      - deci-common/git_commit_and_tag:
          version: $NEW_VERSION
          config_automation_user: false #already configured earlier

  release_version:
    environment:
      CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>
    parameters:
      version:
        type: string
      py_version:
        type: string
      dev_venv_name:
        type: string
        default: "dev-data_gradients-${CIRCLE_BUILD_NUM}"
    docker:
      - image: cimg/python:<< parameters.py_version >>
    steps:
      - deci-common/checkout_and_skip_build:
          check_version_file: true
          skip_md_files: << pipeline.parameters.skip_md_files >>
      - run:
          name: add requirements.txt a to source code
          command: |
            cp requirements.txt src/data_gradients/requirements.txt

      - handle_version_files:
          version: << parameters.version >>

      - deci-common/pip_upload_package_codeartifact_dev:
          codeartifact_repository: "deci-packages"

      - deci-common/pip_test_package_installation_codeartifact_dev: # we are testing dev only. so we won't publish trash to prod
          package_name: "data-gradients"
          version: << parameters.version >>
          venv_name: << parameters.dev_venv_name >>

      - verify_that_package_version_is_aligned_with_code:
          venv_name: << parameters.dev_venv_name >>
          version: << parameters.version >>

      - deci-common/pip_upload_package_codeartifact_prod:
          codeartifact_repository: "deci-packages"

      - deci-common/git_commit_and_tag:
          version: << parameters.version >>
          delete_remote_tag_before_tagging: true
          config_automation_user: false #already configured earlier

      - deci-common/tag_as:
          tag_name: "stable"
          delete_remote: true

      - deci-common/github_create_release:
          github_cli_token: $GITHUB_CLI_TOKEN
          directory_to_cd_into: "."
          tag: << parameters.version >>
          generate_notes: true

workflows:
  release:
    unless:
      or:
        - << pipeline.parameters.ad_hoc_container_build >>
        - << pipeline.parameters.ad_hoc_container_build_code_only >>
    jobs:
      - deci-common/persist_version_info:
          version_override: $CIRCLE_TAG
          <<: *release_tag_filter
      - build:
          name: "build3.8"
          py_version: "3.8"
          package_name: "data-gradients"
          requires:
            - deci-common/persist_version_info
          <<: *release_tag_filter
      - release_version:
          py_version: "3.8"
          version: $CIRCLE_TAG
          requires:
            - "build3.8"
          context:
            - aws-dev
            - aws-prod
            - aws-master
            - github-token
          <<: *release_tag_filter
      - deci-common/pip_upload_package_from_codeartifact_to_global_pypi:
          package_name: "data-gradients"
          name: "upload_data_gradients_to_pypi"
          version: $CIRCLE_TAG
          requires:
            - "release_version"
          context:
            - pypi-datagradients
            - aws-prod
            - aws-master
          <<: *release_tag_filter

  build_and_deploy:
    unless:
      or:
        - << pipeline.parameters.ad_hoc_container_build >>
        - << pipeline.parameters.ad_hoc_container_build_code_only >>
    jobs:
      - deci-common/persist_version_info:
          use_rc: true
          use_beta: false

      - build:
          name: "build3.8"
          py_version: "3.8"
          package_name: "data-gradients"
          requires:
            - deci-common/persist_version_info

      - deci-common/codeartifact_login:
          repo_name: "deci-packages"
          dev_account: true
          context:
            - aws-dev
            - aws-master
          <<: *release_candidate_filter

      - release_candidate: # happens on merge
          py_version: "3.8"
          requires:
            - "build3.8"
            - deci-common/codeartifact_login
          context:
            - aws-dev
            - aws-master
          <<: *release_candidate_filter

